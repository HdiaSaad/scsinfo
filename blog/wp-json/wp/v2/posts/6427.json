{"id":6427,"date":"2018-04-26T10:05:38","date_gmt":"2018-04-26T14:05:38","guid":{"rendered":"https:\/\/www.unifiedinfotech.net\/?p=6427"},"modified":"2020-04-17T03:47:02","modified_gmt":"2020-04-17T07:47:02","slug":"secure-rest-api-using-json-web-token","status":"publish","type":"post","link":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/","title":{"rendered":"How to Secure a REST API Using JSON Web Token"},"content":{"rendered":"<p style=\"text-align: justify;\">API security is very important and emerging as a concern than ever before. Here, learn how to implement user identity management and authorization with JSON Web Tokens.<\/p>\n<p style=\"text-align: justify;\">Have you ever noticed how authentication works? What is behind all the abstractions and complexity? It&#8217;s nothing special actually. Encrypting a value, it is a way, in turn, creating unique token users use as an identifier. The token verifies user\u2019s identity and can authenticate who you are and approve various resources you have access to.<\/p>\n<p style=\"text-align: justify;\">What does JWT actually mean in a down to earth point of view? Let\u2019s break down what the official definition states:<\/p>\n<p style=\"text-align: justify;\">What does JSON Web Token actually mean in the official definition? Let\u2019s get it straight.<\/p>\n<p style=\"text-align: justify;\">\u201cJSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and\/or encrypted.\u201d<\/p>\n<p>&#8211; Internet Engineering Task Force (IETF)<\/p>\n<h3>Securing Restful APIs With JWTs<\/h3>\n<p style=\"text-align: justify;\">When a user successfully logs in using their credentials during the authentication process, a JSON Web Token is returned and must be saved locally in local storage. Whenever the user wants to access a protected resource or route, the JWT must be sent to the user agent usually in the Authorization header Bearer Schema with the request.<\/p>\n<p style=\"text-align: justify;\">Next, when a back-end server receives a JWT with a request, the first things to do is to validate the token. The following list consists of a series of steps. If any of these fails then the request must be rejected.<\/p>\n<p style=\"text-align: justify;\">\u2022 Check that the JWT is well-formed<\/p>\n<p style=\"text-align: justify;\">\u2022 Check the signature<\/p>\n<p style=\"text-align: justify;\">\u2022 Validate the standard claims<\/p>\n<p style=\"text-align: justify;\">\u2022 Check the Client permissions (scopes)<\/p>\n<p style=\"text-align: justify;\">There are some things you must know before we start explaining about Node.js and some ECMAScript standards. As we will expect you already know how to build a RESTful API using Node.JS. This blog will not get into the nitty-gritty details but these resources can provide more information about JWTS and its validation.<\/p>\n<h3>Let\u2019s Start Writing Some Codes!<\/h3>\n<p style=\"text-align: justify;\">All things considered, not yet actually. We have to set up the environment first. The code should hold up no less than a couple more minutes. This part is exhausting so to get up and running fast we&#8217;ll clone the repository from the instructional tutorial above. Open up a terminal window or run this command:<\/p>\n<pre>git clone https:\/\/github.com\/adnanrahic\/nodejs-restful-api.git<\/pre>\n<p>You\u2019ll find a folder, just open it up. Take a look at the folder structure.<\/p>\n<pre>&gt; user\r\n \u00a0 - User.js\r\n \u00a0 - UserController.js\r\n - db.js\r\n - server.js\r\n - app.js\r\n - package.json<\/pre>\n<p style=\"text-align: justify;\">We have a client folder with a model and a controller, and fundamental CRUD effectively executed. Our app.js contains the essential arrangement. The db.js ensures the application interfaces with the database. The server.js ensures our server spins up.<\/p>\n<p style=\"text-align: justify;\">Simply ahead and introduce all required Node modules. Switch back to your terminal window. Ensure you&#8217;re in the envelope named \u2018nodejs-restful-api\u2019 and run npm install. Sit tight for a moment or two for the modules to introduce. Presently you have to include a database association string in db.js.<\/p>\n<p style=\"text-align: justify;\">Now, you can spin up the server back in your terminal window type node server.js.<\/p>\n<p style=\"text-align: justify;\">Go ahead and spin up the server, back in your terminal window type node server.js. You should see Express server listening on port 3000 get logged to the terminal.<\/p>\n<h3>Check Out Some Codes<\/h3>\n<p style=\"text-align: justify;\">We should begin by conceptualizing about what we need to build. Most importantly we need to include client validation. It Signifies, executing a framework for enrolling and logging users in.<\/p>\n<p style=\"text-align: justify;\">Also, we need to include approval. The demonstration is of allowing clients the authorization to get to specific assets on our REST API.<\/p>\n<p style=\"text-align: justify;\">Begin by including another record in the root directory of the project. Give it a name of config.js. Here you&#8217;ll put arrangement settings for the application. All that we require right now is simply to characterize a mystery key for our JSON Web Token.<\/p>\n<pre>\/\/ config.js\r\n module.exports = {\r\n \u00a0 'secret': 'supersecret'\r\n };<\/pre>\n<p style=\"text-align: justify;\">With this additional, you&#8217;re prepared to start including the authentication. Make an envelope named auth and begin by including a document named AuthController.js. This controller will be home for our authentication logic.<\/p>\n<p style=\"text-align: justify;\">Add this bit of code to the highest point of the AuthController.js.<\/p>\n<pre>\/\/ AuthController.jsvar express = require('express');\r\n var router = express.Router();\r\n var bodyParser = require('body-parser');\r\n router.use(bodyParser.urlencoded({ extended: false }));\r\n router.use(bodyParser.json());\r\n var User = require('..\/user\/User');<\/pre>\n<p style=\"text-align: justify;\">Now your system is all ready to put in the module for utilizing JSON Web Tokens and encrypting passwords. Use this code into the AuthController.js:<\/p>\n<pre>var jwt = require('jsonwebtoken');\r\nvar bcrypt = require('bcryptjs');\r\nvar config = require('..\/config');<\/pre>\n<p style=\"text-align: justify;\">You must open up a terminal window in your project folder. Now install the following modules:<\/p>\n<pre>npm install jsonwebtoken --save\r\nnpm install bcryptjs --save<\/pre>\n<p style=\"text-align: justify;\">You are ready to create or register endpoint. Insert this code to your AuthController.js:<\/p>\n<pre>router.post('\/register', function(req, res) {\r\n \u00a0 \r\n \u00a0 var hashedPassword = bcrypt.hashSync(req.body.password, 8);\r\n \u00a0 \r\n \u00a0 User.create({\r\n \u00a0\u00a0\u00a0 name : req.body.name,\r\n \u00a0\u00a0\u00a0 email : req.body.email,\r\n \u00a0\u00a0\u00a0 password : hashedPassword\r\n \u00a0 },\r\n \u00a0 function (err, user) {\r\n \u00a0\u00a0\u00a0 if (err) return res.status(500).send(\"There was a problem registering the user.\")\u00a0\u00a0\u00a0 \/\/ create a token\r\n \u00a0\u00a0\u00a0 var token = jwt.sign({ id: user._id }, config.secret, {\r\n \u00a0\u00a0\u00a0\u00a0\u00a0 expiresIn: 86400 \/\/ expires in 24 hours\r\n \u00a0\u00a0\u00a0 });\u00a0\u00a0\u00a0 res.status(200).send({ auth: true, token: token });\r\n \u00a0 }); \r\n });\r\n res.status(200).send({ auth: true, token: token });\r\n }); \r\n});<\/pre>\n<p style=\"text-align: justify;\">Here we&#8217;re anticipating that the client should send us three values, a name, an email and a password. We&#8217;re instantly going to take the secret key and encode it with Bcrypt&#8217;s hashing method. At that point take the hashed password, incorporate name and email and make new user. After the user has been effectively made, we&#8217;re calm to make a token for that user.<\/p>\n<p style=\"text-align: justify;\">The jwt.sign() technique takes a payload and the secret key characterized in config.js as parameters. It makes an exceptional series of characters speaking to the payload. For our situation, the payload is a protest containing just the id of the client. We should compose a bit of code to get the client id in view of the token we got once again from the enroll endpoint.<\/p>\n<pre>router.get('\/me', function(req, res) {\r\n var token = req.headers['x-access-token'];\r\n if (!token) return res.status(401).send({ auth: false, message: 'No token provided.' });\r\n \r\n jwt.verify(token, config.secret, function(err, decoded) {\r\n if (err) return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\r\n \r\n res.status(200).send(decoded);\r\n });\r\n});<\/pre>\n<p style=\"text-align: justify;\">Here we&#8217;re expecting the token to be sent alongside the request in the headers. The default name for a token in the headers of a HTTP ask for is x-access-token. If there is no token gave the demand the server sends back an error. To be more exact, a 401 unapproved status with a reaction message of &#8216;No token gave&#8217;. If the token exists, the jwt.verify() strategy will be called. This technique unravels the token making it conceivable to see the first payload. We&#8217;ll deal with blunders if there are any and if there are not, send back the decoded an incentive as the response.<\/p>\n<p style=\"text-align: justify;\">At long last we have to add the course to the AuthController.js in our primary app.js document. To start with send out the switch from AuthController.js:<\/p>\n<pre>\/\/ add this to the bottom of AuthController.js\r\nmodule.exports = router;<\/pre>\n<p style=\"text-align: justify;\">Where you exported the app, add areference to the controller in the main app.<\/p>\n<pre>\/\/ app.js\r\nvar AuthController = require('.\/auth\/AuthController');\r\napp.use('\/api\/auth', AuthController);\r\nmodule.exports = app;<\/pre>\n<h3>Wrapping Up!<\/h3>\n<p style=\"text-align: justify;\">As we are covering up how to secure a RESTful API, we are hoping to cover them up in near future. It\u2019s fine to take a back step and rest for a while before trying again. SCS INFO is a promising <a href=\"https:\/\/www.unifiedinfotech.net\/services\/web-design-new-york\/\" target=\"_blank\"><strong>Website Development Company in MA<\/strong><\/a> giving world-class solutions to every problem. Have fun and be innovative!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>API security is very important and emerging as a concern than ever before. Here, learn how to implement user identity management and authorization with JSON Web Tokens. Have you ever noticed how authentication works? What is behind all the abstractions and complexity? It&#8217;s nothing special actually. Encrypting a value, it is a way, in turn, [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":6447,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[14,269,27],"tags":[174],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.6.1 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to Secure a REST API Using JSON Web Token - Unified Infotech<\/title>\n<meta name=\"description\" content=\"Best Website Development Company in MAprovides REST API Using JSON Web Token &amp; Node.js to create a unique &amp; useful token that users use as an identifier.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to Secure a REST API Using JSON Web Token - Unified Infotech\" \/>\n<meta property=\"og:description\" content=\"Best Website Development Company in MAprovides REST API Using JSON Web Token &amp; Node.js to create a unique &amp; useful token that users use as an identifier.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/\" \/>\n<meta property=\"og:site_name\" content=\"Unified Infotech\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/unifiedinfotech\/\" \/>\n<meta property=\"article:published_time\" content=\"2018-04-26T14:05:38+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-04-17T07:47:02+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.unifiedinfotech.net\/blog\/wp-content\/uploads\/2018\/04\/How-to-Secure-a-REST-API-Using-JSON-Web-Token.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"825\" \/>\n\t<meta property=\"og:image:height\" content=\"430\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Pratip Biswas\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@unified_infotec\" \/>\n<meta name=\"twitter:site\" content=\"@unified_infotec\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Pratip Biswas\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Article\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/\"},\"author\":{\"name\":\"Pratip Biswas\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/person\/6678f51be7224e0dee5a17bc2d8a5428\"},\"headline\":\"How to Secure a REST API Using JSON Web Token\",\"datePublished\":\"2018-04-26T14:05:38+00:00\",\"dateModified\":\"2020-04-17T07:47:02+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/\"},\"wordCount\":1142,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#organization\"},\"keywords\":[\"Website Development Company in MA\"],\"articleSection\":[\"All\",\"Design &amp; Development\",\"Tech\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#respond\"]}]},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/\",\"url\":\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/\",\"name\":\"How to Secure a REST API Using JSON Web Token - Unified Infotech\",\"isPartOf\":{\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#website\"},\"datePublished\":\"2018-04-26T14:05:38+00:00\",\"dateModified\":\"2020-04-17T07:47:02+00:00\",\"description\":\"Best Website Development Company in MAprovides REST API Using JSON Web Token & Node.js to create a unique & useful token that users use as an identifier.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.unifiedinfotech.net\/blog\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"How to Secure a REST API Using JSON Web Token\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#website\",\"url\":\"https:\/\/www.unifiedinfotech.net\/blog\/\",\"name\":\"Unified Infotech\",\"description\":\"\",\"publisher\":{\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.unifiedinfotech.net\/blog\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#organization\",\"name\":\"Unified Infotech\",\"url\":\"https:\/\/www.unifiedinfotech.net\/blog\/\",\"sameAs\":[\"https:\/\/www.instagram.com\/unified.infotech\/\",\"https:\/\/www.linkedin.com\/company\/unifiedinfotech\/\",\"https:\/\/www.facebook.com\/unifiedinfotech\/\",\"https:\/\/twitter.com\/unified_infotec\"],\"logo\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/logo\/image\/\",\"url\":\"https:\/\/www.unifiedinfotech.net\/blog\/wp-content\/uploads\/2019\/06\/LinkedIn-Company-Logo-Image-black.jpg\",\"contentUrl\":\"https:\/\/www.unifiedinfotech.net\/blog\/wp-content\/uploads\/2019\/06\/LinkedIn-Company-Logo-Image-black.jpg\",\"width\":300,\"height\":300,\"caption\":\"Unified Infotech\"},\"image\":{\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/logo\/image\/\"}},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/person\/6678f51be7224e0dee5a17bc2d8a5428\",\"name\":\"Pratip Biswas\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/b8a39b993d92d9c5bcc87bd89223b371?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/b8a39b993d92d9c5bcc87bd89223b371?s=96&d=mm&r=g\",\"caption\":\"Pratip Biswas\"},\"description\":\"I am an Entrepreneur and a Tech Geek with more than 1500 successful projects launched. I share my experience through my love for writing and help other entrepreneurs reach their business goals.\",\"sameAs\":[\"https:\/\/www.unifiedinfotech.net\/\"]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"How to Secure a REST API Using JSON Web Token - Unified Infotech","description":"Best Website Development Company in MAprovides REST API Using JSON Web Token & Node.js to create a unique & useful token that users use as an identifier.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/","og_locale":"en_US","og_type":"article","og_title":"How to Secure a REST API Using JSON Web Token - Unified Infotech","og_description":"Best Website Development Company in MAprovides REST API Using JSON Web Token & Node.js to create a unique & useful token that users use as an identifier.","og_url":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/","og_site_name":"Unified Infotech","article_publisher":"https:\/\/www.facebook.com\/unifiedinfotech\/","article_published_time":"2018-04-26T14:05:38+00:00","article_modified_time":"2020-04-17T07:47:02+00:00","og_image":[{"width":825,"height":430,"url":"https:\/\/www.unifiedinfotech.net\/blog\/wp-content\/uploads\/2018\/04\/How-to-Secure-a-REST-API-Using-JSON-Web-Token.jpg","type":"image\/jpeg"}],"author":"Pratip Biswas","twitter_card":"summary_large_image","twitter_creator":"@unified_infotec","twitter_site":"@unified_infotec","twitter_misc":{"Written by":"Pratip Biswas","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Article","@id":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#article","isPartOf":{"@id":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/"},"author":{"name":"Pratip Biswas","@id":"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/person\/6678f51be7224e0dee5a17bc2d8a5428"},"headline":"How to Secure a REST API Using JSON Web Token","datePublished":"2018-04-26T14:05:38+00:00","dateModified":"2020-04-17T07:47:02+00:00","mainEntityOfPage":{"@id":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/"},"wordCount":1142,"commentCount":0,"publisher":{"@id":"https:\/\/www.unifiedinfotech.net\/blog\/#organization"},"keywords":["Website Development Company in MA"],"articleSection":["All","Design &amp; Development","Tech"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#respond"]}]},{"@type":"WebPage","@id":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/","url":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/","name":"How to Secure a REST API Using JSON Web Token - Unified Infotech","isPartOf":{"@id":"https:\/\/www.unifiedinfotech.net\/blog\/#website"},"datePublished":"2018-04-26T14:05:38+00:00","dateModified":"2020-04-17T07:47:02+00:00","description":"Best Website Development Company in MAprovides REST API Using JSON Web Token & Node.js to create a unique & useful token that users use as an identifier.","breadcrumb":{"@id":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.unifiedinfotech.net\/blog\/secure-rest-api-using-json-web-token\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.unifiedinfotech.net\/blog\/"},{"@type":"ListItem","position":2,"name":"How to Secure a REST API Using JSON Web Token"}]},{"@type":"WebSite","@id":"https:\/\/www.unifiedinfotech.net\/blog\/#website","url":"https:\/\/www.unifiedinfotech.net\/blog\/","name":"Unified Infotech","description":"","publisher":{"@id":"https:\/\/www.unifiedinfotech.net\/blog\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.unifiedinfotech.net\/blog\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Organization","@id":"https:\/\/www.unifiedinfotech.net\/blog\/#organization","name":"Unified Infotech","url":"https:\/\/www.unifiedinfotech.net\/blog\/","sameAs":["https:\/\/www.instagram.com\/unified.infotech\/","https:\/\/www.linkedin.com\/company\/unifiedinfotech\/","https:\/\/www.facebook.com\/unifiedinfotech\/","https:\/\/twitter.com\/unified_infotec"],"logo":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/logo\/image\/","url":"https:\/\/www.unifiedinfotech.net\/blog\/wp-content\/uploads\/2019\/06\/LinkedIn-Company-Logo-Image-black.jpg","contentUrl":"https:\/\/www.unifiedinfotech.net\/blog\/wp-content\/uploads\/2019\/06\/LinkedIn-Company-Logo-Image-black.jpg","width":300,"height":300,"caption":"Unified Infotech"},"image":{"@id":"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/logo\/image\/"}},{"@type":"Person","@id":"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/person\/6678f51be7224e0dee5a17bc2d8a5428","name":"Pratip Biswas","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.unifiedinfotech.net\/blog\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/b8a39b993d92d9c5bcc87bd89223b371?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/b8a39b993d92d9c5bcc87bd89223b371?s=96&d=mm&r=g","caption":"Pratip Biswas"},"description":"I am an Entrepreneur and a Tech Geek with more than 1500 successful projects launched. I share my experience through my love for writing and help other entrepreneurs reach their business goals.","sameAs":["https:\/\/www.unifiedinfotech.net\/"]}]}},"_links":{"self":[{"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/posts\/6427"}],"collection":[{"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/comments?post=6427"}],"version-history":[{"count":4,"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/posts\/6427\/revisions"}],"predecessor-version":[{"id":12282,"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/posts\/6427\/revisions\/12282"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/media\/6447"}],"wp:attachment":[{"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/media?parent=6427"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/categories?post=6427"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.unifiedinfotech.net\/blog\/wp-json\/wp\/v2\/tags?post=6427"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}